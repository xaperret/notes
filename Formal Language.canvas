{
	"nodes":[
		{"type":"group","id":"4f30d0d9c4691519","x":-2000,"y":1160,"width":2360,"height":600,"label":"Language"},
		{"type":"group","id":"2b77edb86be1f5a7","x":-1260,"y":1860,"width":1060,"height":720,"label":"Formal grammars"},
		{"type":"file","file":"Formal Languages and Compilation.md","id":"18ec4f338fc460a7","x":-880,"y":-500,"width":400,"height":400},
		{"type":"file","file":"Compilation.md","id":"96ba8ef307be8457","x":-880,"y":80,"width":400,"height":400},
		{"type":"file","file":"Automata Theory.md","id":"f8dff76986a87044","x":-1540,"y":80,"width":400,"height":400},
		{"type":"file","file":"Book Notes/Formal Languages and Compilation Book Notes.md","id":"636a51c6f35ba7b3","x":400,"y":-793,"width":746,"height":987},
		{"type":"file","file":"Compiler.md","id":"e369f32e231c5efe","x":-880,"y":680,"width":400,"height":400},
		{"type":"file","file":"Artificial Languages.md","id":"842887385551c6ca","x":-560,"y":1280,"width":400,"height":400},
		{"type":"file","file":"Source language.md","id":"1ee35ce8a0974a6f","x":-1440,"y":1280,"width":400,"height":400},
		{"type":"file","file":"Target language.md","id":"b6de39cda0ec3c23","x":-1000,"y":1280,"width":400,"height":400},
		{"type":"file","file":"Language.md","id":"1dfed07acb6de7d0","x":-1940,"y":1280,"width":400,"height":400,"color":"1"},
		{"type":"file","file":"Formal Language.md","id":"e2a9faba54a70a10","x":-120,"y":1280,"width":400,"height":400},
		{"type":"file","file":"Lexical grammar.md","id":"62cba4be3c179603","x":-1380,"y":3000,"width":400,"height":400},
		{"type":"file","file":"Regular Language.md","id":"ed729dc40b0a9910","x":-800,"y":3000,"width":400,"height":400},
		{"type":"file","file":"Formal grammars.md","id":"c7037061e33f359a","x":-1220,"y":1900,"width":400,"height":400},
		{"type":"file","file":"Context-free grammar.md","id":"303a9042a8793183","x":-620,"y":1900,"width":400,"height":400},
		{"type":"file","file":"Resources/Images/Pasted image 20230207094636.png","id":"8ff86be402e86968","x":-1200,"y":2380,"width":400,"height":115},
		{"type":"text","text":"Questions :\n- Que faire de la grammaire lexicale ?\n\t- La séparer ? **Oui pourquoi pas**\n\t- La laisser avec la grammaire syntaxique ?\n- Comment gérer les jours par exemple qui prennent des nombres mais dont la valeur est comprise entre 1 et 31 ? **Simple**\n- Le non-déterminisme de notre grammaire, ne serait-il pas possible de simplement parser le texte et de gérer le non-déterminisme au-dessus du parser ? **Oui**\n- Est-ce que je peux facilement essayer de réimplémenter ma grammaire en utilisant fast parse ? **Oui mais non**\n- Les critères de notre parser :\n\t- Gérer le non-déterminisme\n\t- ???\n\n--- \n\nLes jours :\n- Les jours vont de 1 à 31. propriété sémantique ==> pas écrire en bnf => nombre entre 1 et 31\n- Jour est une règle sémantique \n- Règle sémantique : évaluer un prédicat sur ce qui est parser, si faux, aller à la règle suivante\n- Day => nombre\n- Day range => ok\n- Date range \n- Month => fix 1 digit ou 2 digit\n- Day => 1 digit ou 2 digit\n- Tester avec fast parse\n- Non déterminisme au-dessus\n- https://index.scala-lang.org/scala/scala-parser-combinators","id":"6f1ec99ddddf7477","x":-2065,"y":2300,"width":645,"height":880},
		{"type":"text","text":"- Quick Algorithm → Milan\n- Parsing for Ifchor ⇾ 1/2 year\n- Q.A. ⇾ better written\n\t- Skype written chat\n\t- 70 k entities\n\t- Period of time\n- Cargo ⇾ Ship Broker ⇾ Bad Written\n- ??? -?⇾ AST -?⇾ Lay can\n- Huge database ⇾ Unlabeled","id":"ed8c40cc4c5dd143","x":-1960,"y":3600,"width":780,"height":460},
		{"id":"a1dd027163cd5c9f","x":1360,"y":-6,"width":960,"height":986,"type":"file","file":"Book Notes/Crafting Interpreters Book Notes.md"}
	],
	"edges":[
		{"id":"f4efa8689446a257","fromNode":"18ec4f338fc460a7","fromSide":"bottom","toNode":"96ba8ef307be8457","toSide":"top"},
		{"id":"86c60a9e8917cccc","fromNode":"96ba8ef307be8457","fromSide":"left","toNode":"f8dff76986a87044","toSide":"right"},
		{"id":"67fca710dca7c641","fromNode":"636a51c6f35ba7b3","fromSide":"left","toNode":"18ec4f338fc460a7","toSide":"right"},
		{"id":"f4a0441f7fc0d9cb","fromNode":"96ba8ef307be8457","fromSide":"bottom","toNode":"e369f32e231c5efe","toSide":"top"},
		{"id":"dc33c63eb8b80301","fromNode":"e369f32e231c5efe","fromSide":"bottom","toNode":"1ee35ce8a0974a6f","toSide":"top"},
		{"id":"ffa2bea34fc6cbd0","fromNode":"e369f32e231c5efe","fromSide":"bottom","toNode":"b6de39cda0ec3c23","toSide":"top"},
		{"id":"1418cb69f0623f30","fromNode":"e369f32e231c5efe","fromSide":"bottom","toNode":"842887385551c6ca","toSide":"top"},
		{"id":"b2271ff613957425","fromNode":"18ec4f338fc460a7","fromSide":"right","toNode":"e2a9faba54a70a10","toSide":"top"},
		{"id":"2c11257740f51b57","fromNode":"62cba4be3c179603","fromSide":"right","toNode":"ed729dc40b0a9910","toSide":"left"},
		{"id":"4257ce759d2e82db","fromNode":"c7037061e33f359a","fromSide":"bottom","toNode":"8ff86be402e86968","toSide":"top"}
	]
}